<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xp.glasses.mapper.wechat.WeChatOrderMapper">


    <insert id="saveOrderMainInfo" parameterType="com.xp.glasses.entity.order.Order">
        INSERT INTO `order`
        (
         order_no,
         wepay_no,
         logistics_no,
         user_id,
         address_id,
         shop_id,
         order_price,
         remarks,
         order_status,
         create_time,
         pay_time,
         send_time,
         complete_time
         )
         values
        (
        #{orderNo},
        #{wePayNo},
        #{logisticsNo},
        #{userId},
        #{addressId},
        #{shopId},
        #{orderPrice},
        #{remarks},
        #{orderStatus},
        #{createTime},
        #{payTime},
        #{sendTime},
        #{completeTime}
        )
    </insert>
    <insert id="saveOrderGoodsItems" parameterType="list">
        INSERT INTO
        order_item
        (id, order_no, goods_id, num, unit_price, attrs) VALUES
        <foreach collection="list" separator="," index="index" item="item">
            (#{item.id},
            #{item.orderNo},
            #{item.goodsId},
            #{item.num},
            #{item.unitPrice},
            #{item.attrs})
        </foreach>
    </insert>
    <delete id="deleteOrder" parameterType="string">
        DELETE o,item FROM `order` o INNER JOIN order_item item ON o.order_no = item.order_no WHERE o.order_no=#{orderNo}
    </delete>

    <resultMap id="orderMap" type="com.xp.glasses.entity.order.Order">
        <id property="orderNo" column="order_no"></id>
        <result property="orderPrice" column="order_price" />
        <result property="orderStatus" column="order_status" />
        <collection property="orderItems" ofType="com.xp.glasses.entity.order.OrderItem">
               <result property="num" column="num" />
               <result property="unitPrice" column="unit_price" />
               <result property="attrs" column="attrs" />
               <association property="goods" javaType="com.xp.glasses.entity.Goods">
                   <result property="name" column="name" />
                   <association property="mainImage" javaType="com.xp.glasses.entity.Image">
                       <result property="url" column="url"></result>
                   </association>
               </association>
        </collection>
    </resultMap>

    <select id="getAllOrders" resultMap="orderMap" parameterType="string">

        SELECT
          o.order_no,
          o.order_price,
          o.order_status,
          item.num,
          item.unit_price,
          item.attrs,
          g.name,
          img.url
        FROM `order` o INNER JOIN glasses.order_item item ON  o.order_no = item.order_no

        INNER JOIN goods g ON g.id = item.goods_id

        INNER JOIN glasses.image img ON img.mapping_id = g.id and img.type = 'MAIN_GOODS'
        WHERE o.user_id = #{userId} order by o.create_time desc

    </select>
</mapper>